//
//  ResultsViewController.swift
//  PersonalQuiz
//
//  Created by –î–º–∏—Ç—Ä–∏–π on 18.08.2022.
//

import UIKit

class ResultsViewController: UIViewController {
    @IBOutlet weak var animalTypeLabel: UILabel!
    @IBOutlet weak var descriptionLabel: UILabel!
    
    var answers: [Answer]!
    
    override func viewDidLoad() {
        super.viewDidLoad()
        navigationItem.hidesBackButton = true
        updateResult()
    }
    
}

// MARK: - Private Methods
extension ResultsViewController {
    
    private func updateResult() { // –≤—Å—è –ª–æ–≥–∏–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º—ã
        var frequencyOfAnimals: [AnimalType: Int] = [:] // –°–æ–∑–¥–∞–ª–∏ –ø—É—Å—Ç–æ–π —Å–ª–æ–≤–∞—Ä—å —Å —ç—Ç–∏–º–∏ —Ç–∏–ø–∞–º–∏
        let animals = answers.map { $0.type } //–ø–µ—Ä–µ–±–∏—Ä–∞–µ—Ç –≤–µ—Å—å –º–∞—Å—Å–∏–≤ —Å —Ç–∏–ø–æ–º —Ç–∞–π–ø
        
        for animal in animals {
            if let animalTypeCount = frequencyOfAnimals[animal] {
                frequencyOfAnimals.updateValue(animalTypeCount, forKey: animal) // –æ–±–Ω–æ–≤–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ —É —Å–ª–æ–≤–∞—Ä—è –ø–æ –∫–ª—é—á—É
            } else {
                frequencyOfAnimals[animal] = 1
            }
        }
        let sortedFrequencyOfAnimals = frequencyOfAnimals.sorted { $0.value > $1.value } // —Å–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—à —Å–ª–æ–≤–∞—Ä—å –ø–æ –∑–∑–Ω–∞—á–µ–Ω–∏—é
        guard let mostFrequencyAnimal = sortedFrequencyOfAnimals.first?.key else { return }
        
        updateUI(with: mostFrequencyAnimal)
    }

    private func updateUI(with animal: AnimalType?) {  // –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã
        animalTypeLabel.text = "–í—ã - \(animal?.rawValue ?? "üê∂")!"
        descriptionLabel.text = animal?.definition ?? ""
    }
}
